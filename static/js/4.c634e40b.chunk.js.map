{"version":3,"sources":["hoc/FormsInstance.js","utils/validators/validators.js","components/main/profile/user/user.module.scss","components/main/profile/posts/post-form/post_form.module.scss","components/main/profile/posts/post-item/post-item.module.scss","components/main/profile/posts/post-form/post-form.js","components/main/profile/posts/post-form/index.js","components/main/profile/posts/post-form/post-form-container.js","components/main/profile/posts/post-item/index.js","components/main/profile/posts/post-item/post-item.js","components/main/profile/posts/posts.js","components/main/profile/posts/index.js","components/main/profile/posts/posts-container.js","components/main/profile/user/statusProfile.js","components/main/profile/user/index.js","components/main/profile/user/user.js","components/main/profile/profile.js","components/main/profile/profile-container.js","components/main/profile/index.js"],"names":["Textarea","styled","textarea","meta","error","touched","Error","p","Element","input","props","as","CreateField","name","validators","component","placeholder","type","validate","required","value","maxLengthCreator","maxLength","length","module","exports","maxLength10","AddPostFormRedux","reduxForm","form","className","Form","wrapper","form_Block","onSubmit","handleSubmit","PostForm","values","addPost","newPostBody","connect","state","newPostText","profileReducer","PostItem","text","img","likesCount","PostStyle","src","alt","Posts","setTimeout","setState","a","console","log","this","posts","map","item","id","React","Component","PostsContainer","StatusProfile","editMode","status","changeEditMode","updateStatus","onStatusChange","e","currentTarget","prevProps","prevState","onChange","autoFocus","onBlur","onClick","User","profile","Block","photos","large","list_block","fullName","list","list_item","contacts","vk","lookingForAJob","lookingForAJobDescription","aboutMe","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getProfile","getStatus","compose","authReducer","isAuth","withRouter"],"mappings":"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","file":"static/js/4.c634e40b.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Field } from \"redux-form\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Textarea = styled.textarea`\r\n  border: ${(meta) => (meta.error && meta.touched ? \"red\" : \"black\")} 2px solid;\r\n  outline: none;\r\n`\r\n\r\nconst Error = styled.p`\r\n  display: ${(meta) => (meta.error && meta.touched ? \"block\" : \"none\")};\r\n  color: red;\r\n`\r\nlet Element = (Element) => ({ input, meta, ...props }) => {\r\n  return (\r\n    <>\r\n      <Textarea as={Element} {...input} {...props} {...meta}></Textarea>\r\n      <Error {...meta}>{meta.error}</Error>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const CreateField = (\r\n  name,\r\n  validators,\r\n  component,\r\n  placeholder = \"\",\r\n  type = \"text\"\r\n) => (\r\n  <Field\r\n    type={type}\r\n    placeholder={placeholder}\r\n    name={name}\r\n    validate={validators}\r\n    component={Element(component)}\r\n  />\r\n)\r\n","export const required = (value) => {\r\n  if (value) return undefined\r\n\r\n  return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n  return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"user_profile__3cTBe\",\"img\":\"user_img__zzCiO\",\"list\":\"user_list__2QKAK\",\"list_block\":\"user_list_block__20Xqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"post_form_wrapper__hhEmy\",\"form_Block\":\"post_form_form_Block__5XcsM\",\"title\":\"post_form_title__1Qo_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"post-item_img__1asKH\",\"wrapper\":\"post-item_wrapper__3qCfd\"};","import React from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { CreateField } from \"../../../../../hoc/FormsInstance\"\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../../../utils/validators/validators\"\r\nimport Form from \"./post_form.module.scss\"\r\n\r\nlet maxLength10 = maxLengthCreator(10)\r\n\r\nconst PostForm = (props) => {\r\n  const addNewPost = (values) => {\r\n    props.addPost(values.newPostBody)\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Posts</h1>\r\n      <AddPostFormRedux onSubmit={addNewPost} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <section className={Form.wrapper}>\r\n      <form className={Form.form_Block} onSubmit={props.handleSubmit}>\r\n        <div>\r\n          {CreateField(\r\n            \"newPostBody\",\r\n            [required, maxLength10],\r\n            \"textarea\",\r\n            \"Post message\",\r\n            null\r\n          )}\r\n        </div>\r\n        <button className=\"btn\">Send</button>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"postAddForm\" })(AddPostForm)\r\n\r\nexport default PostForm\r\n","import PostForm from \"./post-form-container\"\r\n\r\nexport default PostForm\r\n","import { addPost } from \"../../../../../redux/profile-reducer\"\r\nimport PostForm from \"./post-form\"\r\nimport { connect } from \"react-redux\"\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostText: state.profileReducer.newPostText,\r\n  }\r\n}\r\nconst PostFormContainer = connect(mapStateToProps, { addPost })(PostForm)\r\n\r\nexport default PostFormContainer\r\n","import PostItem from './post-item'\r\n\r\nexport default PostItem","import React from \"react\"\r\n\r\nimport PostStyle from \"./post-item.module.scss\"\r\n\r\nconst PostItem = ({ text, img, likesCount }) => {\r\n  return (\r\n    <section className={PostStyle.wrapper}>\r\n      <img className={PostStyle.img} src={img} alt=\"\" />\r\n      <p>\r\n        {text}\r\n        {likesCount}\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostItem\r\n","import React from \"react\"\r\n\r\nimport PostFormContainer from \"./post-form\"\r\nimport PostItem from \"./post-item\"\r\n\r\nclass Posts extends React.Component {\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ a: 12 })\r\n    }, 3000)\r\n  }\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != this.props || nextState != this.state\r\n  // }\r\n\r\n  render() {\r\n    console.log(\"gg\")\r\n    return (\r\n      <div>\r\n        <PostFormContainer />\r\n        {this.props.posts.map((item) => {\r\n          return (\r\n            <PostItem\r\n              key={item.id}\r\n              text={item.text}\r\n              img={item.img}\r\n              likesCount={item.likesCount}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Posts\r\n","import PostsContainer from \"./posts-container\"\r\n\r\nexport default PostsContainer\r\n","import { connect } from \"react-redux\"\r\nimport Posts from \"./posts\"\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profileReducer.posts,\r\n  }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps)(Posts)\r\nexport default PostsContainer\r\n","import React, { useState, useEffect } from \"react\"\r\nimport styles from \"./user.module.scss\"\r\n\r\n// const StatusProfileWithHooks = (props) => {\r\n//   let [editMode, setEditMode] = useState(false)\r\n//   let [status, setStatus] = useState(props.status)\r\n//   useEffect(() => {\r\n//     setStatus(props.status)\r\n//   }, [props.status])\r\n//   const activateMode = () => {\r\n//     setEditMode(true)\r\n//   }\r\n//   const deactivateActiveMode = () => {\r\n//     setEditMode(false)\r\n//     props.updateStatus(status)\r\n//   }\r\n//   const onStatusChange = (e) => {\r\n//     setStatus(e.currentTarget.value)\r\n//   }\r\n//   return (\r\n//     <>\r\n//       {!editMode ? (\r\n//         <div onClick={activateMode}>\r\n//           <span>Статус: {props.status || \"Нет статуса\"}</span>\r\n//         </div>\r\n//       ) : (\r\n//         <div>\r\n//           <input\r\n//             onChange={onStatusChange}\r\n//             autoFocus={true}\r\n//             onBlur={deactivateActiveMode}\r\n//             value={status}\r\n//           />\r\n//         </div>\r\n//       )}\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default StatusProfileWithHooks\r\n\r\nclass StatusProfile extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      })\r\n    }\r\n  }\r\n  changeEditMode = () => {\r\n    this.setState({ editMode: !this.state.editMode })\r\n    this.props.updateStatus(this.state.status)\r\n  }\r\n  onStatusChange = (e) => {\r\n    this.setState({ status: e.currentTarget.value })\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.state.editMode ? (\r\n          <div>\r\n            <span onClick={this.changeEditMode}>Статус: {this.props.status}</span>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <input\r\n              onChange={this.onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={() => this.changeEditMode()}\r\n              type=\"text\"\r\n              value={this.state.status}\r\n            />\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default StatusProfile\r\n","import User from \"./user\"\r\nexport default User\r\n","import React from \"react\"\r\nimport Preloader from \"../../../common\"\r\n\r\nimport Block from \"./user.module.scss\"\r\nimport StatusProfile from \"./statusProfile\"\r\nconst User = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <section className={Block.profile}>\r\n      <img\r\n        className={Block.img}\r\n        src={\r\n          props.profile.photos.large\r\n            ? props.profile.photos.large\r\n            : \"https://i.pinimg.com/originals/8a/8b/ce/8a8bcebc18991720dde80d09a183840b.jpg\"\r\n        }\r\n        alt=\"\"\r\n      />\r\n\r\n      <div className={Block.list_block}>\r\n        <h3>{props.profile.fullName}</h3>\r\n        <ul className={Block.list}>\r\n          <li className={Block.list_item}>\r\n            Где меня найти:&nbsp;{props.profile.contacts.vk}\r\n          </li>\r\n          <li className={Block.list_item}>\r\n            {props.profile.lookingForAJob ? \"Ищу работу!!\" : \"Нее, не ищу работу\"}\r\n          </li>\r\n          <li className={Block.list_item}>\r\n            Ищу работу:&nbsp;\r\n            {props.profile.lookingForAJobDescription}\r\n          </li>\r\n\r\n          <li className={Block.list_item}>Обо мне:&nbsp; {props.profile.aboutMe}</li>\r\n        </ul>\r\n        <StatusProfile status={props.status} updateStatus={props.updateStatus} />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\nexport default User\r\n","import React from \"react\"\r\nimport PostFormContainer from \"./posts\"\r\nimport User from \"./user\"\r\nconst Profile = (props) => {\r\n  return (\r\n    <>\r\n      <User {...props} />\r\n      <PostFormContainer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from \"react\"\r\nimport Profile from \"./profile\"\r\nimport { connect } from \"react-redux\"\r\nimport { getProfile, getStatus, updateStatus } from \"../../../redux/profile-reducer\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { compose } from \"redux\"\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n  render() {\r\n    return (\r\n      <section>\r\n        <Profile\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </section>\r\n    )\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profileReducer.profile,\r\n  status: state.profileReducer.status,\r\n  authorizedUserId: state.authReducer.userId,\r\n  isAuth: state.authReducer.isAuth,\r\n})\r\nexport default compose(\r\n  connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer)\r\n","import ProfileContainer from \"./profile-container\"\r\nexport default ProfileContainer\r\n"],"sourceRoot":""}